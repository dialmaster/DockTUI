[tool.poetry]
name = "DockTUI"
version = "0.2.0"
description = "An interactive terminal dashboard for monitoring and managing Docker Compose environments"
authors = ["Chris Dial <dial.chris@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "DockTUI"}]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
textual = "^3.4.0"
docker = "^7.0.0"
pyperclip = "^1.9.0"
pyyaml = "^6.0.1"
defusedxml = "^0.7.1"
# Optional dependencies for enhanced log highlighting
pygments = { version = "^2.17.0", optional = true }
drain3 = { version = "^0.9.0", optional = true }
pyparsing = { version = "^3.1.0", optional = true }

[tool.poetry.extras]
highlighting = ["pygments", "drain3", "pyparsing"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
coverage = "^7.0.0"
black = "^24.1.1"
isort = "^5.13.2"
autoflake = "^2.3.1"
poethepoet = "^0.24.4"
pre-commit = ">=2.9.2,<3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
DockTUI = "DockTUI.app:main"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
remove-duplicate-keys = true
ignore-init-module-imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["DockTUI"]
omit = ["*/tests/*", "*/__init__.py", "*/__main__.py"]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.poe.tasks]
format = [
    {cmd = "autoflake --remove-all-unused-imports --remove-unused-variables --in-place --recursive DockTUI/"},
    {cmd = "isort DockTUI/"},
    {cmd = "black DockTUI/"}
]
lint = [
    {cmd = "autoflake --check --remove-all-unused-imports --remove-unused-variables --recursive DockTUI/"},
    {cmd = "isort --check-only DockTUI/"},
    {cmd = "black --check DockTUI/"}
]
test = "pytest -v"
test-cov = "pytest -v --cov=DockTUI --cov-report=term-missing --cov-report=html"
check = ["lint", "test"]
all = ["format", "test"]
